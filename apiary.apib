FORMAT: 1A
HOST: https://api.frankandoak.com/

# F&O API - Customer

Customer API is a simple microservice allowing consumers to view polls and vote in them..


## Group Customer

Attributes
- `id` - Customer's ID
- `createdAt` - UTC timestamp ([ISO 8601](http://www.w3.org/TR/NOTE-datetime)) for when this object was created
- `updatedAt` - UTC timestamp ([ISO 8601](http://www.w3.org/TR/NOTE-datetime)) for last time this object was updated - *optional*
- `groups` - Customer's groups as array of strings (Hunt Club members, ["huntclub"])
- `email` - Customer's Email Address
- `firstName` - Customer's first name - *optional*
- `lastName` - Customer's last name - *optional*
- `gender` - Customer's gender (male or female) - *optional*
- `birthDate` - Customer's birthDate - *optional*
- `defaultShippingAddressId` - Customer's default shipping address ID - *optional*
- `defaultBillingAddressId` - Customer's default billing address ID - *optional*
- `storeCredit` - Customer's Store Credit (can't be updated from here)
- `currency` - Customer's setted Currency

Extra Attributes for Customer Details
- `gender` - *optional*
- `advisorId` - Customer's Style Advisor ID - *optional*
- `externalAccounts` - *optional*

        
## Customer [/customers/{customerId}]

+ Model (application/json)

    + Header
    
    + Body
    
            {
                "@type":                                    "Customer",
                "id":                                       1,  
                "groupId":                                  1, 
                "createdAt":                                "2015-01-07T13:57:00Z", 
                "updatedAt":                                "2015-01-10T09:11:53Z",
                "email":                                    "michael@frankandoak.com", 
                "firstName":                                "Michael", 
                "lastName":                                 "Eilers Smith", 
                "gender":                                   "male", 
                "birthDate":                                "03/17/1983", 
                "storeCredit":                              41.66, 
                "externalAccounts" : [
                    {
                        "@type": "ExternalAccount",
                        "provider": "facebook",
                        "id": "4324325242"
                    }
                ]
            }
            
            
+ Parameters
    + customerId (required, number, `1`) ... Numeric `id` of the User to perform action with. 

### Retrieve a Customer [GET]
        
+ Request (application/json)
    
    + Header

            If-Modified-Since: Fri, 23 Jan 2015 20:50:05 GMT
            X-Session-Token: grg42gtwegsfr           
            

+ Response 200

    [Customer][]

+ Response 304

+ Response 400 (application/json)

+ Response 500 (application/json)

### Update a Customer [PUT]
+ Request (application/json)

    Attributes
    - `groupId` - Customer's group - *optional*
    - `email` - Customer's Email Address - *optional*
    - `firstName` - Customer's first name - *optional*
    - `lastName` - Customer's last name - *optional*
    - `gender` - Customer's gender (male or female) - *optional*
    - `birthDate` - Customer's birthDate - *optional*
    - `defaultShippingAddressId` - Customer's default shipping address ID - *optional*
    - `defaultBillingAddressId` - Customer's default billing address ID - *optional*
    - `storeCredit` - Customer's Store Credit - *optional, admin permission*
    - `facebookId` - Customer's facebook ID - *optional*
    - `googleId` - Customer's google ID - *optional*
    
    + Header

    + Body

            { 
                "email": "michael@frankandoak.com", 
                "firstName": "Michael", 
                "lastName": "Eilers Smith", 
                "gender": "male", 
                "birthDate": "03/17/1983", 
                "externalAccounts" : [
                    {
                        "provider": "facebook",
                        "id": "4324325242"
                    }
                ]
            }
        
        
+ Response 200

    [Customer][]
    
+ Response 400 (application/json)

+ Response 500 (application/json)



### Remove a Customer [DELETE]
+ Response 204

+ Response 400 (application/json)

+ Response 500 (application/json)


## Customers Collection [/customers]

+ Model (application/json)

            
    + Body

            {
                "previous": "/customers?page=2",
                "next": "/customers?page=4",
                "last": "/customers?page=498",
                "@type":"Collection",
                "member": 
                    [
                        {
                            "@type": "Customer",
                            "id": 1, 
                            "createdAt": "2015-01-07T13:57:00Z", 
                            "updatedAt": "2015-01-10T09:11:53Z", 
                            "groupId": 4, 
                            "email": "michael@frankandoak.com", 
                            "firstName": "Michael", 
                            "lastName": "Eilers Smith", 
                            "gender": "male", 
                            "birthDate": "03/17/1983", 
                            "defaultShippingAddressId":325413, 
                            "defaultBillingAddressId": 270186,
                            "storeCredit": 41.66
                        }, 
                        {
                            "@type": "Customer",
                            "id": 2, 
                            "createdAt": "2015-01-07T13:57:00Z", 
                            "updatedAt": "2015-01-10T09:11:53Z", 
                            "groupId": 1, 
                            "email": "sean@frankandoak.com", 
                            "firstName": "Sean", 
                            "lastName": "Connery", 
                            "gender": "male", 
                            "birthDate": "03/17/1963", 
                            "defaultShippingAddressId":325413, 
                            "defaultBillingAddressId": 270186,
                            "storeCredit": 41.66
                        }
                    ]
            }

    
### List all Customers [GET]

+ Request (application/json)

    + Headers
    
            If-Modified-Since: Fri, 23 Jan 2015 20:50:05 GMT
            X-Session-Token: grg42gtwegsfr    
            
            
+ Response 200

    [Customers Collection][]

+ Response 304

+ Response 400 (application/json)

+ Response 500 (application/json)


### Create a Customer [POST]

+ Request (application/json)

    Attributes
    - `groupId` - Customer's group - *optional*
    - `email` - Customer's Email Address
    - `firstName` - Customer's first name - *optional*
    - `lastName` - Customer's last name - *optional*
    - `gender` - Customer's gender (male or female) - *optional*
    - `birthDate` - Customer's birthDate - *optional*
    - `facebookId` - Customer's facebook ID - *optional*
    - `googleId` - Customer's google ID - *optional*


    + Headers
    
            X-Session-Token: grg42gtwegsfr   
            
    + Body
    
            {
                "email": "michael@frankandoak.com", 
                "firstName": "Michael", 
                "lastName": "Eilers Smith", 
                "gender": "male", 
                "birthDate": "03/17/1983", 
                "facebookId": 4324325242, 
                "googleId": 7643322533243
            }

+ Response 201 (application/json)

        {
            "@type": "Customer",
            "id": 1, 
            "createdAt": "2015-01-07T13:57:00Z", 
            "groupId": 1, 
            "email": "michael@frankandoak.com", 
            "firstName": "Michael", 
            "lastName": "Eilers Smith", 
            "gender": "male", 
            "birthDate": "03/17/1983", 
            "storeCredit": 0,00, 
            "facebookId": 4324325242, 
            "googleId": 7643322533243
        }
        
+ Response 400 (application/json)

+ Response 500 (application/json)





## Group Post

Resources related to customer posts in the API.

## Post [/customers/{cid}/posts/{postId}]

A Post object has the following attributes:

- `id`
- `createdAt` - An ISO8601 date when the question was created.
- `updatedAt` - An ISO8601 date when the question was updated.
- `publishedAt` - An ISO8601 date when the question was published.
- `type` - { none, transaction, promotion, styleAdvice, content }
- `title`
- `message`
- `is_deleted` - Has the user deleted the post
- `deepLink` - *optional*
- `webUrl` - *optional*
- `youtubeUrl` - *optional*
- `vimeoUrl` - *optional*

+ Parameters
    + cid: 1 (required, number) - ID of the Customer in form of an integer
    + postId: 1 (required, number) - ID of the Post in form of an integer

+ Model (application/json)

    + Header
    
    + Body
    
            {
                "@type": "Post",
                "id": 1,
                "createdAt": "2014-11-11T08:40:51.620Z",
                "updatedAt": "2014-11-11T08:40:51.620Z",
                "publishedAt": "2014-11-11T08:40:51.620Z",
                "type": "styleAdvice",
                "title": "Style Watch",
                "message": "This week I've been watching for haircut trends on Montreal's Plateau. Conclusion: short in the back, crazy on top.",
                "images": [
                    {
                        "id": 1,
                        "createdAt": "2014-11-11T08:40:51.620Z",
                        "updatedAt": "2014-11-11T08:40:51.620Z",
                        "title": "Short in the back",
                        "comment": "I really like how there is no hair on his neck."
                        "imageUrl": "customers/1//posts/1/images/1/short.jpg"
                    },
                    {
                        "id": 2,
                        "createdAt": "2014-11-11T08:40:51.620Z",
                        "updatedAt": "2014-11-11T08:40:51.620Z",
                        "title": "Fuzzy on top",
                        "comment": "I wonder what shampoo he uses."
                        "imageUrl": "customers/1//posts/1/images/2/fuzzy.jpg"
                    }
                ]
            }
            
### View a Post's Detail [GET]

+ Response 200 (application/json)


        {
            "@type": "Post",
            "id": 1,
            "createdAt": "2014-11-11T08:40:51.620Z",
            "updatedAt": "2014-11-11T08:40:51.620Z",
            "publishedAt": "2014-11-11T08:40:51.620Z",
            "type": "styleAdvice",
            "title": "Style Watch",
            "message": "This week I've been watching for haircut trends on Montreal's Plateau. Conclusion: short in the back, crazy on top.",
            "images": [
                {
                    "id": 1,
                    "createdAt": "2014-11-11T08:40:51.620Z",
                    "updatedAt": "2014-11-11T08:40:51.620Z",
                    "title": "Short in the back",
                    "comment": "I really like how there is no hair on his neck."
                    "imageUrl": "customers/1//posts/1/images/1/short.jpg"
                },
                {
                    "id": 2,
                    "createdAt": "2014-11-11T08:40:51.620Z",
                    "updatedAt": "2014-11-11T08:40:51.620Z",
                    "title": "Fuzzy on top",
                    "comment": "I wonder what shampoo he uses."
                    "imageUrl": "customers/1//posts/1/images/2/fuzzy.jpg"
                }
            ]
        }

### Update a Post [PUT]
+ Request (application/json)

    Attributes
    - `groupId` - Customer's group - *optional*
    - `email` - Customer's Email Address - *optional*
    - `firstName` - Customer's first name - *optional*
    - `lastName` - Customer's last name - *optional*
    - `gender` - Customer's gender (male or female) - *optional*
    - `birthDate` - Customer's birthDate - *optional*
    - `defaultShippingAddressId` - Customer's default shipping address ID - *optional*
    - `defaultBillingAddressId` - Customer's default billing address ID - *optional*
    - `storeCredit` - Customer's Store Credit - *optional, admin permission*
    - `facebookId` - Customer's facebook ID - *optional*
    - `googleId` - Customer's google ID - *optional*
    
    + Header

    + Body

            {
                "id": 1,
                "createdAt": "2014-11-11T08:40:51.620Z",
                "updatedAt": "2014-11-11T08:40:51.620Z",
                "publishedAt": "2014-11-11T08:40:51.620Z",
                "type": "styleAdvice",
                "title": "Style Watch",
                "message": "This week I've been watching for haircut trends on Montreal's Plateau. Conclusion: short in the back, crazy on top.",
                "images": [
                    {
                        "id": 1,
                        "createdAt": "2014-11-11T08:40:51.620Z",
                        "updatedAt": "2014-11-11T08:40:51.620Z",
                        "title": "Short in the back",
                        "comment": "I really like how there is no hair on his neck."
                        "imageUrl": "customers/1//posts/1/images/1/short.jpg"
                    },
                    {
                        "id": 2,
                        "createdAt": "2014-11-11T08:40:51.620Z",
                        "updatedAt": "2014-11-11T08:40:51.620Z",
                        "title": "Fuzzy on top",
                        "comment": "I wonder what shampoo he uses."
                        "imageUrl": "customers/1//posts/1/images/2/fuzzy.jpg"
                    },
                    "is_deleted": 1
                ]
            }
        
        
+ Response 200

    [Post][]
    
+ Response 400 (application/json)

+ Response 500 (application/json)            
            
## Posts Collection [/customers/{cid}/posts{?page}{?is_deleted}]

+ Parameters
    + page: 1 (optional, number) - The page of surveys to return
    + is_deleted: 0 (optional, number) - Only show posts that weren't deleted by the user

### List All Posts [GET]

+ Response 200 (application/json)

    + Headers

            Link: </surveys?page=2>; rel="next"

    + Body

            {
                "previous": "/posts?page=2",
                "next": "/posts?page=4",
                "last": "/posts?page=498",
                "@type":"Collection",
                "member": 
                    [
                        {
                            "@type": "Post",
                            "id": 1,
                            "createdAt": "2014-11-11T08:40:51.620Z",
                            "updatedAt": "2014-11-11T08:40:51.620Z",
                            "publishedAt": "2014-11-11T08:40:51.620Z",
                            "type": "styleAdvice",
                            "title": "Style Watch",
                            "message": "This week I've been watching for haircut trends on Montreal's Plateau. Conclusion: short in the back, crazy on top.",
                            "images": [
                                {
                                    "id": 1,
                                    "createdAt": "2014-11-11T08:40:51.620Z",
                                    "updatedAt": "2014-11-11T08:40:51.620Z",
                                    "title": "Short in the back",
                                    "comment": "I really like how there is no hair on his neck."
                                    "imageUrl": "customers/1//posts/1/images/1/short.jpg"
                                },
                                {
                                    "id": 2,
                                    "createdAt": "2014-11-11T08:40:51.620Z",
                                    "updatedAt": "2014-11-11T08:40:51.620Z",
                                    "title": "Fuzzy on top",
                                    "comment": "I wonder what shampoo he uses."
                                    "imageUrl": "customers/1//posts/1/images/2/fuzzy.jpg"
                                }
                            ]
                        },
                        {
                            "@type": "Post",
                            "id": 2,
                            "createdAt": "2014-11-11T08:40:51.620Z",
                            "updatedAt": "2014-11-11T08:40:51.620Z",
                            "publishedAt": "2014-11-11T08:40:51.620Z",
                            "type": "promotion",
                            "title": "The July collection is now live",
                            "message": "This month's collection is inspired by Spain. Spain is a pretty awesome country",
                            "products": [
                                {
                                    "id": 1,
                                    "productId": 4323444,
                                    "createdAt": "2014-11-11T08:40:51.620Z",
                                    "updatedAt": "2014-11-11T08:40:51.620Z",
                                    "comment": "What a great suit this is."
                                },
                                {
                                    "id": 2,
                                    "productId": 5435434,
                                    "createdAt": "2014-11-11T08:40:51.620Z",
                                    "updatedAt": "2014-11-11T08:40:51.620Z",
                                    "comment": "I really see you in this sweater."
                                }
                            ]
                        }
                    ]
            }
            

### Create a Post [POST]

You may create your own survey using this action. It takes a JSON
object containing a post.

+ title (string) - The post title
+ ...

+ Request (application/json)

        {
            "publishedAt": "2014-11-11T08:40:51.620Z",
            "type": "styleAdvice",
            "title": "Style Watch",
            "message": "This week I've been watching for haircut trends on Montreal's Plateau. Conclusion: short in the back, crazy on top.",
            "images": 
                [
                    {
                        "id": 1,
                        "title": "Short in the back",
                        "comment": "I really like how there is no hair on his neck."
                        "imageUrl": "customers/1//posts/1/images/1/short.jpg"
                    },
                    {
                        "id": 2,
                        "title": "Fuzzy on top",
                        "comment": "I wonder what shampoo he uses."
                        "imageUrl": "customers/1//posts/1/images/2/fuzzy.jpg"
                    }
                ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /surveys/2

    + Body

            {
                "@type": "Post",
                "id": 1,
                "createdAt": "2014-11-11T08:40:51.620Z",
                "publishedAt": "2014-11-11T08:40:51.620Z",
                "type": "styleAdvice",
                "title": "Style Watch",
                "message": "This week I've been watching for haircut trends on Montreal's Plateau. Conclusion: short in the back, crazy on top.",
                "images": 
                    [
                        {
                            "id": 1,
                            "createdAt": "2014-11-11T08:40:51.620Z",
                            "updatedAt": "2014-11-11T08:40:51.620Z",
                            "title": "Short in the back",
                            "comment": "I really like how there is no hair on his neck."
                            "imageUrl": "customers/1//posts/1/images/1/short.jpg"
                        },
                        {
                            "id": 2,
                            "createdAt": "2014-11-11T08:40:51.620Z",
                            "updatedAt": "2014-11-11T08:40:51.620Z",
                            "title": "Fuzzy on top",
                            "comment": "I wonder what shampoo he uses."
                            "imageUrl": "customers/1//posts/1/images/2/fuzzy.jpg"
                        }
                    ]
            }





            
## Group Survey

Resources related to customer surveys in the API.

## Survey [/customers/{cid}/surveys/{surveyId}]

A Survey object has the following attributes:

- `id`
- `createdAt` - An ISO8601 date when the question was created.
- `updatedAt` - An ISO8601 date when the question was updated.
- `title`
- `subtitle`
- `description`
- `imageUrl` - *optional*
- `genderGroup` - { none, male, female } - *optional*
- `ageGroup` - { none, 18-25, 26-39, 40+ } - *optional*
- `customerGroups` - List of customer groups that have exclusive access to the survey, separated by a comma. If null, the survey is public. - *optional*
- `expiresAt` - *optional*
- `seen` - *optional*

+ Parameters
    + cid: 1 (required, number) - ID of the Customer in form of an integer
    + surveyId: 1 (required, number) - ID of the Survey in form of an integer

### View a Survey's Detail [GET]

+ Response 200 (application/json)

        {
            "@type": "Survey",
            "id": 1,
            "title": "Sizing",
            "createdAt": "2014-11-11T08:40:51.620Z",
            "imageUrl": "/surveys/1.jpg"
        }

            
            
## Surveys Collection [/customers/{cid}/surveys{?page}]

+ Parameters
    + page: 1 (optional, number) - The page of surveys to return

### List All Surveys [GET]

+ Response 200 (application/json)

    + Headers

            Link: </posts?page=2>; rel="next"

    + Body

            {
                "previous": "/posts?page=2",
                "next": "/posts?page=4",
                "last": "/posts?page=498",
                "@type": "Collection",
                "member": 
                    [
                        {
                            "@type": "Survey",
                            "id": 1,
                            "title": "Sizing",
                            "createdAt": "2014-11-11T08:40:51.620Z",
                            "imageUrl": "/surveys/1.jpg"
                        },
                        {
                            "@type": "Survey",
                            "id": 2,
                            "title": "Budget",
                            "createdAt": "2014-11-11T08:40:51.620Z",
                            "imageUrl": "/surveys/2.jpg"
                        }
                    ]
                }

### Create a Survey [POST]

You may create your own survey using this action. It takes a JSON
object containing a survey.

+ title (string) - The survey title
+ ...

+ Request (application/json)

        {
            "title": "Basic Information"
        }

+ Response 201 (application/json)

    + Headers

            Location: /surveys/2

    + Body

            {
                "id": 1,
                "title": "Sizing",
                "createdAt": "2014-11-11T08:40:51.620Z",
                "imageUrl": "/surveys/1.jpg"
            }

## Question [/customers/{cid}/surveys/{sid}/questions/{questionId}]

A Question object has the following attributes:

- `id`
- `createdAt` - An ISO8601 date when the question was created.
- `updatedAt` - An ISO8601 date when the question was updated.
- `type` - { none, singleChoice, multipleChoice, field }
- `title`
- `subtitle`
- `description`
- `isRequired`
- `isRecurring` - *optional*
- `recurrenceInDays` - *optional*
- `genderGroup` - { none, male, female } - *optional*
- `ageGroup` - { none, 18-25, 26-39, 40+ } - *optional*
- `imageUrl` - *optional*
- `votes` - Number of times the choice was selected as an answer - *optional*
- `choices` - An array of Choice objects. - *optional*

+ Parameters
    + cid: 1 (required, number) - ID of the Customer in form of an integer
    + questionId: 1 (required, number) - ID of the Question in form of an integer

### View a Questions Detail [GET]

+ Response 200 (application/json)

        {
            "@type": "Question",
            "id": 1,
            "title": "What is your shirt size?",
            "type": "singleChoice",
            "createdAt": "2014-11-11T08:40:51.620Z",
            "imageUrl": "/questions/1.jpg",
            "choices": [
                {
                    "id": 1,
                    "createdAt": "2014-11-11T08:40:51.620Z",
                    "title": "XS",
                    "votes": 2048
                }, {
                    "id": 2,
                    "createdAt": "2014-11-11T08:40:51.620Z",
                    "title": "S",
                    "votes": 1024
                }, {
                    "id": 3,
                    "createdAt": "2014-11-11T08:40:51.620Z",
                    "title": "M",
                    "votes": 512
                }, {
                    "id": 4,
                    "createdAt": "2014-11-11T08:40:51.620Z",
                    "title": "L",
                    "votes": 256
                }
            ],
            "answer": {
                "id": 1,
                "createdAt": "2014-11-11T08:40:51.620Z",
                "choices": [ 1 ]
            }
        }



            
            
## Questions Collection [/customers/{cid}/surveys/{sid}/questions{?is_answered}{?page}]

+ Parameters
    + is_answered: 1 (optional, number) - The answer status of questions to return
    + page: 1 (optional, number) - The page of questions to return

### List All Questions [GET]

+ Response 200 (application/json)

    + Headers

            Link: </questions?page=2>; rel="next"

    + Body

            [
                {
                    "@type": "Question",
                    "id": 1,
                    "title": "What is your shirt size?",
                    "type": "singleChoice",
                    "createdAt": "2014-11-11T08:40:51.620Z",
                    "imageUrl": "/questions/1.jpg",
                    "choices": [
                                {
                                    "id": 1,
                                    "createdAt": "2014-11-11T08:40:51.620Z",
                                    "title": "XS",
                                    "votes": 2048
                                }, {
                                    "id": 2,
                                    "createdAt": "2014-11-11T08:40:51.620Z",
                                    "title": "S",
                                    "votes": 1024
                                }, {
                                    "id": 3,
                                    "createdAt": "2014-11-11T08:40:51.620Z",
                                    "title": "M",
                                    "votes": 512
                                }, {
                                    "id": 4,
                                    "createdAt": "2014-11-11T08:40:51.620Z",
                                    "title": "L",
                                    "votes": 256
                                }
                            ],
                    "answer": {
                        "id": 1,
                        "createdAt": "2014-11-11T08:40:51.620Z",
                        "choices": [ 1 ]
                    }
                }
            ]

### Create a Question [POST]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ title (string) - The question title
+ type (integer) - The question type (single choice, multiple, field)
+ choices (array[Choice]) - A collection of choices.

+ Request (application/json)

        {
            "title": "What is your pant fit?",
            "type": "singleChoice",
            "choices": [
                {
                    "title"
                }
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /sites/1/customers/432432/surveys/1/questions/2

    + Body

            {
                "question": "What is your pant fit?",
                "type": "singleChoice",
                "createdAt": "2014-11-11T08:40:51.620Z",
                "choices": [
                    {
                        "title": "XS"
                    }, {
                        "title": "S"
                    }, {
                        "title": "M"
                    }, {
                        "title": "L"
                    }
                ]
            }

## Choice [/customers/{cid}/surveys/{sid}/questions/{qid}/choices/{choiceId}]

A Choice object has the following attributes:

- `id`
- `createdAt` - An ISO8601 date when the question was created.
- `updatedAt` - An ISO8601 date when the question was updated.
- `type` - { none, singleChoice, multipleChoice, field }
- `title`
- `subtitle`
- `description`
- `isRequired`
- `isRecurring` - *optional*
- `recurrenceInDays` - *optional*
- `genderGroup` - { none, male, female } - *optional*
- `ageGroup` - { none, 18-25, 26-39, 40+ } - *optional*
- `imageUrl` - *optional*
- `votes` - Number of times the choice was selected as an answer - *optional*
- `choices` - An array of Choice objects. - *optional*

+ Parameters
    + cid: 1 (required, number) - ID of the Customer in form of an integer
    + qid: 1 (required, number) - ID of the Question in form of an integer
    + choiceId: 1 (required, number) - ID of the Choice in form of an integer

### View a Choices Detail [GET]

+ Response 200 (application/json)

        {
            "@type": "Choice",
            "id": 1,
            "createdAt": "2014-11-11T08:40:51.620Z",
            "title": "S",
            "votes": 256
        }



            
            
## Choices Collection [/customers/{cid}/surveys/{sid}/questions/{qid}/choices]

### List All Choices [GET]

+ Response 200 (application/json)

    + Headers

            Link: </questions?page=2>; rel="next"

    + Body

            [
                {
                    "@type": "Choice",
                    "id": 1,
                    "createdAt": "2014-11-11T08:40:51.620Z",
                    "title": "XS",
                    "votes": 2048
                },
                {
                    "@type": "Choice",
                    "id": 2,
                    "createdAt": "2014-11-11T08:40:51.620Z",
                    "title": "S",
                    "votes": 2048
                }
            ]

### Create a Choice [POST]

You may create your own choice using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ title (string) - The choice title

+ Request (application/json)

        {
            "title": "XS"
        }

+ Response 201 (application/json)

    + Headers

            Location: /sites/1/customers/432432/surveys/1/questions/1/choices/2

    + Body

                {
                    "@type": "Choice",
                    "id": 2,
                    "createdAt": "2014-11-11T08:40:51.620Z",
                    "title": "S",
                    "votes": 2048
                }
            
## Answer [/customers/{cid}/surveys/{sid}/questions/{qid}/answer]

+ Parameters
    + cid: 1 (required, number) - ID of the Customer in form of an integer
    + qid: 1 (required, number) - ID of the Question in form of an integer
    


### Answer a question [POST]

You may answer a question using this action. It takes a JSON
object containing a collection of choiceIds or a text entry.

+ choices (array[string]) - A collection of choices.
+ entry (string) - A collection of choices.

        
+ Response 201

    + Headers

            Location: /questions/1
            
            
            
## Group Answer

Resources related to customer surveys in the API.

## Answer [/customers/{cid}/answers/{answerId}]

A Answer object has the following attributes:

- `id`
- `createdAt` - An ISO8601 date when the question was created.
- `updatedAt` - An ISO8601 date when the question was updated.
- `surveyId`
- `questionId`
- `choices`- Array of choice Ids - *optional*
- `entry` - *optional*

+ Parameters
    + cid: 1 (required, number) - ID of the Customer in form of an integer
    + answerId: 1 (required, number) - ID of the Answer in form of an integer

### View a Answer's Detail [GET]

+ Response 200 (application/json)

        {
            "@type": "Answer",
            "id": 1,
            "surveyId": 1,
            "questionId": 43,
            "choices": [1,4,5]
        }

            
            
## Answers Collection [/customers/{cid}/answers{?page}]

+ Parameters
    + page: 1 (optional, number) - The page of answers to return

### List All Answers [GET]

+ Response 200 (application/json)

    + Headers

            Link: </answers?page=2>; rel="next"

    + Body

            [
                {
                    "@type": "Answer",
                    "id": 33,
                    "surveyId": 1,
                    "questionId": 43,
                    "choices": [1,4,5]
                },
                {
                    "@type": "Answer",
                    "id": 34,
                    "surveyId": 1,
                    "questionId": 46,
                    "entry": "I like going to movies"
                },
            ]

### Create a Answer [POST]

You may create your own survey using this action. It takes a JSON
object containing a survey.

+ surveyId (integer) - The survey id
+ questionId (integer) - The question id
+ choices (Array[integer]) - The list of choices selected - *Optional*
- entry (string) - a text entry - *optional*
+ ...

+ Request (application/json)

            {
                "surveyId": 1,
                "questionId": 34,
                "entry": "I like bicycles"
            }

+ Response 201 (application/json)

    + Headers

            Location: /answers/2

    + Body

            {
                "@type": "Answer",
                "id": 33,
                "surveyId": 1,
                "questionId": 43,
                "choices": [1,4,5]
            }

